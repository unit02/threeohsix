#!/usr/bin/env python

# Shape
# top speed
# working speed
# color

# methods
# moveForward
# turn (int degrees)
# wait (int timeToWaitInSeconds)


from std_msgs.msg import String
import roslib
import rospy
from geometry_msgs.msg import Vector3, Twist
from nav_msgs import Odometry


class dynamicObjects(object):
	def callback(data):
    		rospy.loginfo(rospy.get_caller_id() + "I heard %s", data.data)

	def __init__(self,shape,topSpeed,workingSpeed,color):
		self.shape = shape
		self.topSpeed = topSpeed
		self.workingSpeed = workingSpeed
		self.color = color
		rospy.init_node('dynamicObjects', anonymous=True)
	    	rospy.Subscriber("robot_0/base_pose_ground_truth", Odometry, callback)

	    	# spin() simply keeps python from exiting until this node is stopped
	    	rospy.spin()

	if __name__ == '__main__':
    		listener()

	def move():
		twist = Twist()
		twist.linear.x = 1
	

	def turn(radian):
		twist = Twist()
		#angular is radians/sec
		twist.angular.x = radian/1


	def wait(seconds):



